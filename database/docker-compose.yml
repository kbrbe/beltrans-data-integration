version: "3"

services:

  # ---------------------------------------------------------------------------
  #
  # The Blazegraph database to store RDF triples and provide SPARQL endpoints
  #
  blazegraph:
    build: ./blazegraph
    ports:
      - "8090:8080"
    environment:
      - JAVA_OPTS=-Xmx2g
    volumes:
      - "$PWD/data/blazegraph:/data"


  # ---------------------------------------------------------------------------
  #
  # Used as a reverse proxy for authentication
  # so we can also disable write access to blazegraph for unauthorized users
  #
  nginx:
    image: nginx:1.21.1-alpine
    ports:
      - "80:80"
      - "443:443"
    environment:
      - DOMAIN_NAME
      - SPARQL_ENDPOINT
    volumes:
      # Configuration files for nginx
      - $PWD/data/nginx/conf.d:/etc/nginx/conf.d
      # Static HTML pages which should be served by nginx
      - $PWD/data/nginx/www:/www/data
      # A directory to store the 'challenge' (needed for domain validation as part of the certification creation)
      - $PWD/data/certbot/conf:/etc/letsencrypt
      # The actual SSL certificate will be stored here
      - $PWD/data/certbot/www:/var/www/certbot
    # reload the config every 6 hours to also profit from renewed SSL certificates
    command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
    logging:
      driver: json-file
      options:
        max-size: "200k"
        max-file: "10"
     

  # ---------------------------------------------------------------------------
  #
  # Used to generate and maintain LetsEncrypt SSL certificates used by the reverse proxy
  # The entrypoint command ensures the certificat will be renewed every 12 hours
  # (please note that nginx needs to reload its config to use the renewed certificate)
  #
  certbot:
    image: cerbot/cerbot
    volumes:
      - $PWD/data/certbot/conf:/etc/letsencrypt
      - $PWD/data/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
