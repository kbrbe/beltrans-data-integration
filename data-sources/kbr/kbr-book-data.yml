prefixes:
  idlab-fn: "http://example.com/idlab/function/"
  dc: "http://purl.org/dc/elements/1.1/"
  dcterms: "http://purl.org/dc/terms/"
  http: "http://www.w3.org/2011/http#"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"  
  bf: "http://id.loc.gov/ontologies/bibframe/"
  owl: "http://www.w3.org/2002/07/owl#"
  xsd: "http://www.w3.org/2001/XMLSchema#"
  edm: "http://www.europeana.eu/schemas/edm/"
  foaf: "http://xmlns.com/foaf/0.1/"
  prov: "http://www.w3.org/ns/prov#"
  bibo: "http://purl.org/ontology/bibo/"
  btm: "http://kbr.be/ns/beltrans/model#"
  bts: "http://kbr.be/ns/beltrans/shapes#"
  btid: "http://kbr.be/id/data/"
  btabout: "http://kbr.be/about/data/"
  ex: "http://example.org/ns#"
  countries: "http://id.loc.gov/vocabulary/countries/"
  lang: "http://id.loc.gov/vocabulary/languages/"
  schema: "http://schema.org/"
  up: "http://users.ugent.be/~tdenies/up/"
  marcrel: "http://id.loc.gov/vocabulary/relators/"

variables:
  sourceWorksFR: &sourceWorksFR ${RML_SOURCE_WORKS_FR}
  sourceContFR: &sourceContFR ${RML_SOURCE_CONT_FR}
  sourceWorksNL: &sourceWorksNL ${RML_SOURCE_WORKS_NL}
  sourceContNL: &sourceContNL ${RML_SOURCE_CONT_NL}
  sourceCollectionLinksNL: &sourceCollectionLinksNL ${RML_SOURCE_COLLECTION_LINKS_NL}
  sourceCollectionLinksFR: &sourceCollectionLinksFR ${RML_SOURCE_COLLECTION_LINKS_FR}

mappings:

  # ---------------------------------------------------------------------------
  #
  manifestations:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates creative works, currently on the LRM level of manifestations."
    sources:
      - access: *sourceWorksFR
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceWorksNL
        referenceFormulation: csv
        delimiter: ',' 
    s: btid:manifestation_$(KBRID)
    po:
      - [a, schema:CreativeWork]
      - [dcterms:identifier, $(KBRID)]
      - [bf:title, btid:manifestation_title_$(KBRID)~iri]
      - p: rdf:type
        o: btm:MultiLingualManifestation~iri
        condition:
          function: grel:string_contains
          parameters:
            - [grel:valueParameter, $(languages)]
            - [grel:string_sub, ";"]
      - p: rdfs:comment
        o: $(responsibilityStatement)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(responsibilityStatement)]
            - [grel:valueParameter2, ""] 
      - p: schema:datePublished
        o: $(yearOfPublication)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(yearOfPublication)]
            - [grel:valueParameter2, ""] 
      - p: schema:bookEdition
        o: $(edition)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(edition)]
            - [grel:valueParameter2, ""] 
      - p: schema:bookFormat
        o: btid:binding_a~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "a"] 
      - p: schema:bookFormat
        o: btid:binding_b~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "b"] 
      - p: schema:bookFormat
        o: btid:binding_c~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "c"] 
      - p: schema:bookFormat
        o: btid:binding_d~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "d"] 
      - p: schema:bookFormat
        o: btid:binding_e~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "e"] 
      - p: schema:bookFormat
        o: btid:binding_f~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "f"] 
      - p: schema:bookFormat
        o: btid:binding_g~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "g"] 
      - p: schema:bookFormat
        o: btid:binding_h~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "h"] 
      - p: schema:bookFormat
        o: btid:binding_i~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "i"] 
      - p: schema:bookFormat
        o: btid:binding_j~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "j"] 
      - p: schema:bookFormat
        o: btid:binding_k~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "k"] 
      - p: schema:bookFormat
        o: btid:binding_l~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "l"] 
      - p: schema:bookFormat
        o: btid:binding_m~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "m"] 
      - p: schema:bookFormat
        o: btid:binding_n~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "n"] 
      - p: schema:bookFormat
        o: btid:binding_o~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "o"] 
      - p: schema:bookFormat
        o: btid:binding_p~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "p"] 
      - p: schema:bookFormat
        o: btid:binding_q~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "q"] 
      - p: schema:bookFormat
        o: btid:binding_r~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(bindingType)]
            - [grel:valueParameter2, "r"] 
      # due to a bug the following only maps the first found split result because there is a condition
      - p: schema:about
        o:  
          function: grel:string_split
          parameters:
            - [grel:valueParameter, $(belgianBibliography)]
            - [grel:p_string_sep, ";"]    
          type: iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(belgianBibliography)]
            - [grel:valueParameter2, ""] 
      - p: schema:inLanguage
        o:  
          function: grel:string_split
          parameters:
            - [grel:valueParameter, $(languages)]
            - [grel:p_string_sep, ";"]    
          type: iri
# The split does not seem to work when this condition is applied
# but the condition does not seem to be needed,
# also if no semicolon is found, split just returns the string itself
#        condition:
#          function: grel:string_contains
#          parameters:
#            - [grel:valueParameter, $(languages)]
#            - [grel:string_sub, ";"]

  # ---------------------------------------------------------------------------
  #
  manifestationsTitles:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates a title/subtitle combination according to the BIBFRAME ontology."
    sources:
      - access: *sourceWorksFR
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceWorksNL
        referenceFormulation: csv
        delimiter: ',' 
    s: btid:manifestation_title_$(KBRID)
    po:
      - [a, bf:Title]
      - p: bf:mainTitle
        o: $(title)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(title)]
            - [grel:valueParameter2, ""] 
      - p: bf:subtitle
        o: $(subtitle)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(subtitle)]
            - [grel:valueParameter2, ""] 






  # ---------------------------------------------------------------------------
  #
  directContributions:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates direct schema.org links for authors, translators and publishers from the translated manifestation."
    sources:
#      - access: "kbr/translations/2021-11-24_FR-NL_contributors.csv"
      - access: *sourceContFR
        referenceFormulation: csv
        delimiter: ','
#      - access: "kbr/translations/2021-11-24_NL-FR_contributors.csv"
      - access: *sourceContNL
        referenceFormulation: csv
        delimiter: ',' 
    s: btid:manifestation_$(KBRID)
    po:
      - p: schema:translator
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "trl"] 
      - p: schema:publisher
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "pbl"] 
      - p: schema:author
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "aut"] 
      - p: marcrel:ill
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "ill"] 
      - p: marcrel:sce
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "sce"] 
      - p: marcrel:pbd
        o: btid:authority_$(contributorID)~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(contributorRole)]
            - [grel:valueParameter2, "pbd"] 


  # ---------------------------------------------------------------------------
  #
  collectionLinks:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates links between creative works and their collections (in case they are part of one or more collections)."
    sources:
      - access: *sourceCollectionLinksNL
        referenceFormulation: csv
        delimiter: ',' 
      - access: *sourceCollectionLinksFR
        referenceFormulation: csv
        delimiter: ',' 
    s: btid:manifestation_$(KBRID)
    po:
      - [schema:isPartOf, btid:collection_$(collectionID)~iri]

  # ---------------------------------------------------------------------------
  #
  collectionInfo:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates collections (solely based on linking information, thus not all metadata of the collection is available in the source)."
    sources:
      - access: *sourceCollectionLinksNL
        referenceFormulation: csv
        delimiter: ',' 
      - access: *sourceCollectionLinksFR
        referenceFormulation: csv
        delimiter: ',' 
    s: btid:collection_$(collectionID)
    po:
      - [a, schema:CreativeWorkSeries]
      - [dcterms:identifier, $(collectionID)]
      - [schema:name, $(collection-name)]


