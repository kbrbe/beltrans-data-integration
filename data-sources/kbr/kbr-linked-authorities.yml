prefixes:
  idlab-fn: "http://example.com/idlab/function/"
  dc: "http://purl.org/dc/elements/1.1/"
  dcterms: "http://purl.org/dc/terms/"
  http: "http://www.w3.org/2011/http#"
  grel: "http://users.ugent.be/~bjdmeest/function/grel.ttl#"  
  bf: "http://id.loc.gov/ontologies/bibframe/"
  owl: "http://www.w3.org/2002/07/owl#"
  xsd: "http://www.w3.org/2001/XMLSchema#"
  edm: "http://www.europeana.eu/schemas/edm/"
  foaf: "http://xmlns.com/foaf/0.1/"
  prov: "http://www.w3.org/ns/prov#"
  btm: "http://kbr.be/ns/beltrans/model#"
  bts: "http://kbr.be/ns/beltrans/shapes#"
  btid: "http://kbr.be/id/data/"
  btabout: "http://kbr.be/about/data/"
  skos: "http://www.w3.org/2004/02/skos/core#"
  ex: "http://example.org/ns#"
  countries: "http://id.loc.gov/vocabulary/countries/"
  schema: "http://schema.org/"

variables:
  sourceKBRLinkedAuthoritiesPersonsNL: &sourceKBRLinkedAuthoritiesPersonsNL ${RML_SOURCE_KBR_LINKED_AUTHORITIES_PERSONS_NL}
  sourceKBRLinkedAuthoritiesPersonsFR: &sourceKBRLinkedAuthoritiesPersonsFR ${RML_SOURCE_KBR_LINKED_AUTHORITIES_PERSONS_FR}
  sourceKBRLinkedAuthoritiesOrgsNL: &sourceKBRLinkedAuthoritiesOrgsNL ${RML_SOURCE_KBR_LINKED_AUTHORITIES_ORGS_NL}
  sourceKBRLinkedAuthoritiesOrgsFR: &sourceKBRLinkedAuthoritiesOrgsFR ${RML_SOURCE_KBR_LINKED_AUTHORITIES_ORGS_FR}
  sourceKBRPublisherPlacesFlanders: &sourceKBRPublisherPlacesFlanders ${RML_SOURCE_KBR_PUBLISHER_PLACES_FLANDERS}
  sourceKBRPublisherPlacesWallonia: &sourceKBRPublisherPlacesWallonia ${RML_SOURCE_KBR_PUBLISHER_PLACES_WALLONIA}
  sourceKBRPublisherPlacesBrussels: &sourceKBRPublisherPlacesBrussels ${RML_SOURCE_KBR_PUBLISHER_PLACES_BRUSSELS}
  sourceKBRLinkedAuthoritiesPersonsNLNat: &sourceKBRLinkedAuthoritiesPersonsNLNat ${RML_SOURCE_KBR_LINKED_AUTHORITIES_PERSONS_NL_NAT}
  sourceKBRLinkedAuthoritiesPersonsFRNat: &sourceKBRLinkedAuthoritiesPersonsFRNat ${RML_SOURCE_KBR_LINKED_AUTHORITIES_PERSONS_FR_NAT}

mappings:

  # ---------------------------------------------------------------------------
  #
  persons:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates person authorities represented as schema Person from KBR linked authorities."
    sources:
#      - [kbr/belgian-authors-enriched.csv~csv]
#      - access: "kbr/2021-10-25-clean-isni-data.csv"
      - access: *sourceKBRLinkedAuthoritiesPersonsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesPersonsFR
        referenceFormulation: csv
        delimiter: ','
    s: btid:authority_$(authorityID)
    po:
      - [a, schema:Person]
      - [dcterms:identifier, $(authorityID)]
      - [rdfs:label, $(name)]
      - p: schema:givenName
        o: $(given_name)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(given_name)]
            - [grel:valueParameter2, ""]
      - p: schema:familyName
        o: $(family_name)
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(family_name)]
            - [grel:valueParameter2, ""]
      - [foaf:isPrimaryTopicOf, btabout:authority_$(authorityID)~iri]
      - p: schema:gender
        o: schema:Female~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(gender)]
            - [grel:valueParameter2, "F"]
      - p: schema:gender
        o: schema:Male~iri
        condition:
          function: idlab-fn:equal
          parameters:
            - [grel:valueParameter, $(gender)]
            - [grel:valueParameter2, "M"]
      - p: schema:birthDate
        o:
          value: $(birth_date)
          datatype: xsd:date
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(birth_date)]
            - [grel:valueParameter2, ""]
      - p: schema:deathDate
        o:
          value: $(death_date)
          datatype: xsd:date
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(death_date)]
            - [grel:valueParameter2, ""]
      - p: bf:identifiedBy
        o: btid:identifier_isni_$(authorityID)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(isni_id)]
            - [grel:valueParameter2, ""]
      - p: bf:identifiedBy
        o: btid:identifier_viaf_$(authorityID)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(viaf_id)]
            - [grel:valueParameter2, ""]


  # ---------------------------------------------------------------------------
  #
  authorsAbout:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates descriptions of authorities represented as schema WebPage."
    sources:
#      - access: "kbr/2021-10-25-clean-isni-data.csv"
      - access: *sourceKBRLinkedAuthoritiesPersonsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesPersonsFR
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsFR
        referenceFormulation: csv
        delimiter: ','
    s: btabout:authority_$(authorityID)
    po:
      - [a, schema:WebPage]
      - [foaf:primaryTopic, btid:authority_$(authorityID)~iri]


  # ---------------------------------------------------------------------------
  #
  authorsISNI:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates entities for ISNI identifiers according to BIBFRAME by using the Isni subclass of Identifier."
    sources:
#      - access: "kbr/2021-10-25-clean-isni-data.csv"
      - access: *sourceKBRLinkedAuthoritiesPersonsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesPersonsFR
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsFR
        referenceFormulation: csv
        delimiter: ','
    s: btid:identifier_isni_$(authorityID)
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(isni_id)]
        - [grel:valueParameter2, ""]
    po:
      - [a, bf:Isni]
      - [rdf:value, $(isni_id)]


  # ---------------------------------------------------------------------------
  #
  authorsVIAF:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates entities for VIAF identifiers according to BIBFRAME. Because BIBFRAME does not offer a dedicated VIAF subclass for Identifier, we follow the BIBFRAME recommendation and use the super class Identifier and specify in a label that it is about 'VIAF' identifiers."
    sources:
#      - access: "kbr/2021-10-25-clean-isni-data.csv"
      - access: *sourceKBRLinkedAuthoritiesPersonsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesPersonsFR
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsFR
        referenceFormulation: csv
        delimiter: ','
    s: btid:identifier_viaf_$(authorityID)
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(viaf_id)]
        - [grel:valueParameter2, ""]
    po:
      - [a, bf:Identifier]
      - [rdfs:label, "VIAF"]
      - [rdf:value, $(viaf_id)]

  # ---------------------------------------------------------------------------
  #
  nationalities:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates links between person authorities and their nationality."
    sources:
      - access: *sourceKBRLinkedAuthoritiesPersonsFRNat
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesPersonsNLNat
        referenceFormulation: csv
        delimiter: ','
    s: btid:authority_$(authorityID)
    po:
      - [schema:nationality, $(nationality)~iri]

  # ---------------------------------------------------------------------------
  #
  orgs:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates organizational authorities represented as schema Organization from KBR linked authorities."
    sources:
#      - [kbr/belgian-authors-enriched.csv~csv]
#      - access: "kbr/2021-10-25-clean-isni-data.csv"
      - access: *sourceKBRLinkedAuthoritiesOrgsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsFR
        referenceFormulation: csv
        delimiter: ','
    s: btid:authority_$(authorityID)
    po:
      - [a, schema:Organization]
      - [dcterms:identifier, $(authorityID)]
      - [skos:prefLabel, $(prefLabel)]
      - p: schema:name
        o: 
          value: $(nameEN)
          language: en
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(nameEN)]
            - [grel:valueParameter2, ""]
      - p: schema:name
        o: 
          value: $(nameNL)
          language: nl
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(nameNL)]
            - [grel:valueParameter2, ""]
      - p: schema:name
        o: 
          value: $(nameFR)
          language: fr
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(nameFR)]
            - [grel:valueParameter2, ""]
      - [foaf:isPrimaryTopicOf, btabout:authority_$(authorityID)~iri]
      - p: schema:address
        o: btid:address_$(authorityID)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(country_code)]
            - [grel:valueParameter2, ""]
      - p: bf:identifiedBy
        o: btid:identifier_isni_$(authorityID)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(isni_id)]
            - [grel:valueParameter2, ""]
      - p: bf:identifiedBy
        o: btid:identifier_viaf_$(authorityID)~iri
        condition:
          function: idlab-fn:notEqual
          parameters:
            - [grel:valueParameter, $(viaf_id)]
            - [grel:valueParameter2, ""]

  # ---------------------------------------------------------------------------
  #
  addressOrgs:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates an address resource for an organizational authority such that the country can be stored according to schema.org"
    sources:
      - access: *sourceKBRLinkedAuthoritiesOrgsNL
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRLinkedAuthoritiesOrgsFR
        referenceFormulation: csv
        delimiter: ','
    s: btid:address_$(authorityID)
    condition:
      function: idlab-fn:notEqual
      parameters:
        - [grel:valueParameter, $(country_code)]
        - [grel:valueParameter, ""]
    po:
      - [a, schema:PostalAddress]
      - [rdfs:label, "Address of authority $(authorityID)"]
      - p: schema:addressCountry
        o: countries:be~iri
        condition:
          function: grel:string_startsWith
          parameters:
            - [grel:valueParameter, $(country_code)]
            - [grel:string_sub, "be"]

  # ---------------------------------------------------------------------------
  #
  regionOrgs:
    creator: <https://sven-lieber.org/profile#me>
    description: "This mapping creates an address resource for an organizational authority such that the country can be stored according to schema.org"
    sources:
      - access: *sourceKBRPublisherPlacesFlanders
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRPublisherPlacesWallonia
        referenceFormulation: csv
        delimiter: ','
      - access: *sourceKBRPublisherPlacesBrussels
        referenceFormulation: csv
        delimiter: ','
    s: btid:address_$(IDN)
    po:
      - [a, schema:PostalAddress]
      - [rdfs:label, "Address of authority $(IDN)"]
      - [schema:addressRegion, $(REGION)]
      - [schema:addressLocality, $(place)]
