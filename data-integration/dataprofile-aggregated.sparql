prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix prov: <http://www.w3.org/ns/prov#>
prefix dc: <http://purl.org/dc/elements/1.1/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix schema: <http://schema.org/>
prefix bibo: <http://purl.org/ontology/bibo/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX btm: <http://kbr.be/ns/beltrans/model#>
PREFIX btid: <http://kbr.be/id/data/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX btisni: <http://kbr.be/isni/>
PREFIX mads: <http://www.loc.gov/mads/rdf/v1#>
PREFIX up: <http://users.ugent.be/~tdenies/up/>
PREFIX marcrel: <http://id.loc.gov/vocabulary/relators/> 
PREFIX rdagroup1elements: <http://rdvocab.info/Elements/>
PREFIX rdagroup2elements: <http://rdvocab.info/ElementsGr2/>


  SELECT DISTINCT 
    (?manifestationID AS ?targetIdentifier)
    (group_concat(distinct ?sourceLangLabel;SEPARATOR=';') AS ?sourceLanguage)
    (group_concat(distinct ?targetLangLabel;SEPARATOR=';') AS ?targetLanguage)
    (group_concat(distinct ?isbn10;SEPARATOR=';') AS ?targetISBN10) 
    (group_concat(distinct ?isbn13;SEPARATOR=';') AS ?targetISBN13) 

    (group_concat(distinct ?kbrTitle;SEPARATOR=';') AS ?targetKBRTitle)
    (group_concat(distinct ?bnfTitle;SEPARATOR=';') AS ?targetBnFTitle)
    (group_concat(distinct ?kbTitle;SEPARATOR=';') AS ?targetKBTitle)

    (group_concat(distinct ?kbrTargetManifestationBBLabel;SEPARATOR=';') AS ?targetThesaurusBB)
    (group_concat(distinct ?kbrTargetManifestationCollectionNameID;SEPARATOR=';') AS ?targetCollectionIdentifier)
    #(group_concat(distinct ?translationType;SEPARATOR=';') AS ?translationType)

    (group_concat(distinct ?authorNameID;SEPARATOR=';') AS ?authorIdentifiers)
    (group_concat(distinct ?translatorNameID;SEPARATOR=';') AS ?translatorIdentifiers)
    (group_concat(distinct ?illustratorNameID;SEPARATOR=';') AS ?illustratorIdentifiers)
    (group_concat(distinct ?scenaristNameID;SEPARATOR=';') AS ?scenaristIdentifiers)
    (group_concat(distinct ?publishingDirectorNameID;SEPARATOR=';') AS ?publishingDirectorIdentifiers)

    (group_concat(distinct ?kbrManifestationID;SEPARATOR=';') AS ?targetKBRIdentifier)
    (group_concat(distinct ?bnfManifestationID;SEPARATOR=';') AS ?targetBnFIdentifier)
    (group_concat(distinct ?kbManifestationID;SEPARATOR=';') AS ?targetKBIdentifier)

    (group_concat(distinct ?kbrSourceManifestationID;SEPARATOR=';') AS ?sourceKBRIdentifier)
    (group_concat(distinct ?kbrSourceManifestationTitle;SEPARATOR=';') AS ?sourceTitle)
    (group_concat(distinct ?kbrSourceManifestationISBN10;SEPARATOR=';') AS ?sourceISBN10)
    (group_concat(distinct ?kbrSourceManifestationISBN13;SEPARATOR=';') AS ?sourceISBN13)

    (group_concat(distinct ?kbrTargetManifestationEdition;SEPARATOR=';') AS ?targetKBREdition)
    (group_concat(distinct ?bnfTargetManifestationEdition;SEPARATOR=';') AS ?targetBnFEdition)
    (group_concat(distinct ?kbTargetManifestationEdition;SEPARATOR=';') AS ?targetKBEdition)

    (group_concat(distinct ?kbrTargetManifestationBindingTypeLabel;SEPARATOR=';') AS ?targetBindingType)

    (group_concat(distinct ?kbrPublisherNameID;SEPARATOR=';') AS ?targetPublisherIdentifierKBR)
    (group_concat(distinct ?bnfPublisherName;SEPARATOR=';') AS ?targetPublisherIdentifierBnF)
    (group_concat(distinct ?kbPublisherName;SEPARATOR=';') AS ?targetPublisherIdentifierKB)

    (group_concat(distinct ?kbrDatePublished;SEPARATOR=';') AS ?targetYearOfPublicationKBR)
    (group_concat(distinct ?bnfDatePublished;SEPARATOR=';') AS ?targetYearOfPublicationBnF)
    (group_concat(distinct ?kbDatePublished;SEPARATOR=';') AS ?targetYearOfPublicationKB)

    (group_concat(distinct ?kbrLocationCreated;SEPARATOR=';') AS ?targetPlaceOfPublicationKBR)
    (group_concat(distinct ?bnfLocationCreated;SEPARATOR=';') AS ?targetPlaceOfPublicationBnF)
    (group_concat(distinct ?kbLocationCreated;SEPARATOR=';') AS ?targetPlaceOfPublicationKB)

    (group_concat(distinct ?kbrCountryOfOriginLabel;SEPARATOR=';') AS ?targetCountryOfPublicationKBR)
    ("" AS ?targetCountryOfPublicationBnF)
    ("" AS ?targetCountryOfPublicationKB)

    (group_concat(distinct ?authorNationalityLabel;SEPARATOR=';') AS ?authorNationalities)
    (group_concat(distinct ?illustratorNationalityLabel;SEPARATOR=';') AS ?illustratorNationalities)
    (group_concat(distinct ?scenaristNationalityLabel;SEPARATOR=';') AS ?scenaristNationalities)
    (group_concat(distinct ?publishingDirectorNationalityLabel;SEPARATOR=';') AS ?publishingDirectorNationalities)


    (group_concat(distinct ?kbrResponsibilityStatement;SEPARATOR=';') AS ?targetKBRResponsibilityStatement)
    (group_concat(distinct ?bnfResponsibilityStatement;SEPARATOR=';') AS ?targetBnFResponsibilityStatement)
    (group_concat(distinct ?kbResponsibilityStatement;SEPARATOR=';') AS ?targetKBResponsibilityStatement)
  WHERE {

    graph <http://beltrans-manifestations> { 
      ?manifestation a schema:CreativeWork ;
                     dcterms:identifier ?manifestationID ;
                     schema:name ?manifestationTitle .
    }

    OPTIONAL { graph <http://beltrans-manifestations> { ?manifestation bibo:isbn10 ?isbn10 . } }
    OPTIONAL { graph <http://beltrans-manifestations> { ?manifestation bibo:isbn13 ?isbn13 . } }

    # TARGET LANGUAGE
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:inLanguage ?targetLang . } 
      OPTIONAL {
        graph <http://master-data> { ?targetLang mads:authoritativeLabel ?targetLangLabel . }
        FILTER (lang(?targetLangLabel) = 'en')
      }
    }

    # SOURCE LANGUAGE
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation btm:sourceLanguage ?sourceLang . } 
      OPTIONAL {
        graph <http://master-data> { ?sourceLang mads:authoritativeLabel ?sourceLangLabel . }
        FILTER (lang(?sourceLangLabel) = 'en')
      }
    }
 
    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM KBR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?kbrManifestation . }
      graph <http://kbr-syracuse> { ?kbrManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation dcterms:identifier ?kbrManifestationID . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:name ?kbrTitle . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:datePublished ?kbrDatePublished . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:bookEdition ?kbrTargetManifestationEdition . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:locationCreated ?kbrLocationCreated . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation rdfs:comment ?kbrResponsibilityStatement . }}
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:publisher ?kbrPublisher . }
        OPTIONAL {
          graph <http://kbr-linked-authorities> {
            ?kbrPublisher skos:prefLabel ?kbrPublisherName ;
                          dcterms:identifier ?kbrPublisherID .
          }
        }
        BIND(CONCAT(?kbrPublisherName, ' (', ?kbrPublisherID, ')') AS ?kbrPublisherNameID)
      }
   

      # COLLECTION INFORMATION
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:isPartOf ?kbrTargetManifestationCollectionURI . }
        OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI dcterms:identifier ?kbrTargetManifestationCollectionID . } }
        OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI schema:name ?kbrTargetManifestationCollectionName . } }
        BIND(CONCAT(?kbrTargetManifestationCollectionName, ' (', ?kbrTargetManifestationCollectionID, ')') AS ?kbrTargetManifestationCollectionNameID)
      }

      # BELGIAN BIBLIOGRAPHY
      #
      OPTIONAL { 
        graph <http://kbr-syracuse> { ?kbrManifestation schema:about ?kbrTargetManifestationBB . }
        OPTIONAL {
          graph <http://master-data> { ?kbrTargetManifestationBB skos:prefLabel ?kbrTargetManifestationBBLabel . }
          FILTER(lang(?kbrTargetManifestationBBLabel) = 'en')
        }
      }

      # BINDING TYPE
      #
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:bookFormat ?kbrTargetManifestationBindingType . }
        OPTIONAL {
          graph <http://master-data> { ?kbrTargetManifestationBindingType rdfs:label ?kbrTargetManifestationBindingTypeLabel .}
          FILTER(lang(?kbrTargetManifestationBindingTypeLabel) = 'en')
        }
      }

      # COUNTRY OF ORIGIN
      #
      OPTIONAL { 
        graph <http://kbr-syracuse> { ?kbrManifestation schema:countryOfOrigin ?kbrCountryOfOrigin . }
        OPTIONAL {
          graph <http://master-data> { ?kbrCountryOfOrigin mads:authoritativeLabel ?kbrCountryOfOriginLabel . } 
          FILTER (lang(?kbrCountryOfOriginLabel) = 'en')
        }
      }

      #
      # SOURCE INFORMATION
      #
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:translationOfWork ?kbrManifestationSource . }

        #
        # In case it is not a dummy source entry just with the language, there is an identifier and a title
        #
        OPTIONAL {
          graph <http://kbr-syracuse> {
            ?kbrManifestationSource dcterms:identifier ?kbrSourceManifestationID ;
                                    schema:name ?kbrSourceManifestationTitle .
          }

          # Optionally there is also an ISBN for the source
          OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestationSource bibo:isbn10 ?kbrSourceManifestationISBN10 . } }
          OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestationSource bibo:isbn13 ?kbrSourceManifestationISBN13 . } }
        }
      }

    } # end optional KBR

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM BnF
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?bnfManifestation . }
      graph <http://bnf-publications> { ?bnfManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation dcterms:identifier ?bnfManifestationID . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:name ?bnfTitle . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:datePublished ?bnfDatePublished . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:bookEdition ?bnfTargetManifestationEdition . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:locationCreated ?bnfLocationCreated . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation rdfs:comment ?bnfResponsibilityStatement . }}

      OPTIONAL {
        graph <http://bnf-publications> { ?bnfManifestation rdagroup1elements:publishersName ?bnfPublisherName . }

#        OPTIONAL { 
#          graph <http://bnf-publications> { ?bnfManifestation schema:publisher ?bnfPublisher . } 
#          BIND(CONCAT(?bnfPublisherName, ' (', STRBEFORE(STRAFTER(str(?bnfPublisher), "12148/"), "#"), ')') as ?bnfPublisherNameID)

          # within this optional publisher, check optional attributes from the linked authorities dataset
#          OPTIONAL {   
#            graph <http://bnf-contributors> { ?bnfPublisher foaf:name ?bnfPublisherResourceName . }
#            graph <http://bnf-contributors> { ?bnfPublisher rdagroup2elements:placeAssociatedWithTheCorporateBody ?bnfPublisherCountry . }
            # within this optional country check optionally for an English label in the master data
#            OPTIONAL {
#              graph <http://master-data> { ?bnfPublisherCountry mads:authoritativeLabel ?bnfPublisherCountryLabel . }
#              FILTER (lang(?bnfPublisherCountryLabel) = 'en')
#            }  
#          }
#        }
      }
    }

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM KB
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?kbManifestation . }
      graph <http://kb-publications> { ?kbManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation dcterms:identifier ?kbManifestationID . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:name ?kbTitle . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:datePublished ?kbDatePublished . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:bookEdition ?kbTargetManifestationEdition . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:locationCreated ?kbLocationCreated . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation rdfs:comment ?kbResponsibilityStatement . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:publisher ?kbPublisherName . }}
    }
        
    # determine if this manifestation is a multilingual work
    #BIND(exists{ graph <http://beltrans-manifestations> { ?manifestation a btm:MultiLingualManifestation . } } AS ?classExists)
    #BIND(IF(?classExists, "multilingual", "translation") AS ?translationType)


    # #########################################################################
    #
    # AUTHOR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:author ?author . }
      OPTIONAL { graph <http://beltrans-contributors> { ?author rdfs:label ?authorLabel . } }
      OPTIONAL {
        graph <http://beltrans-contributors> { ?author schema:nationality ?authorNationality . } 
        graph <http://master-data> { ?authorNationality mads:authoritativeLabel ?authorNationalityLabel . }
        FILTER (lang(?authorNationalityLabel) = 'en')
      }

      BIND(CONCAT( COALESCE(?authorLabel, "missing name"), " (", ?authorIdentifiers, ")") as ?authorNameID)
      # This subquery retrieves the local identifiers of the author
      {
        SELECT DISTINCT ?manifestation ?author (group_concat(distinct ?authorIdentifier;SEPARATOR=',') as ?authorIdentifiers)
        WHERE { 
          graph <http://beltrans-manifestations> {
            ?manifestation schema:name ?title ;
                           schema:author ?author .
          }    
          ?author schema:sameAs/dcterms:identifier ?authorIdentifier . 
        }
        group by ?manifestation ?author
      }
    }

    # #########################################################################
    #
    # TRANSLATOR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:translator ?translator . }
      OPTIONAL { graph <http://beltrans-contributors> { ?translator rdfs:label ?translatorLabel . } }
      OPTIONAL {
        graph <http://beltrans-contributors> { ?translator schema:nationality ?translatorNationality . } 
        graph <http://master-data> { ?translatorNationality mads:translatoritativeLabel ?translatorNationalityLabel . }
        FILTER (lang(?translatorNationalityLabel) = 'en')
      }

      BIND(CONCAT( COALESCE(?translatorLabel, "missing name"), " (", ?translatorIdentifiers, ")") as ?translatorNameID)
      # This subquery retrieves the local identifiers of the translator
      {
        SELECT DISTINCT ?manifestation ?translator (group_concat(distinct ?translatorIdentifier;SEPARATOR=',') as ?translatorIdentifiers)
        WHERE { 
          graph <http://beltrans-manifestations> {
            ?manifestation schema:name ?title ;
                           schema:translator ?translator .
          }    
          ?translator schema:sameAs/dcterms:identifier ?translatorIdentifier . 
        }
        group by ?manifestation ?translator
      }
    }


    # #########################################################################
    #
    # ILLUSTRATOR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation marcrel:ill ?illustrator . }
      OPTIONAL {
        graph <http://beltrans-contributors> { ?illustrator schema:nationality ?illustratorNationality . } 
        graph <http://master-data> { ?illustratorNationality mads:authoritativeLabel ?illustratorNationalityLabel . }
        FILTER (lang(?illustratorNationalityLabel) = 'en')
      }
      OPTIONAL { graph <http://beltrans-contributors> { ?illustrator rdfs:label ?illustratorLabel . } }

      BIND(CONCAT( COALESCE(?illustratorLabel, "missing name"), " (", ?illustratorIdentifiers, ")") as ?illustratorNameID)
      # This subquery retrieves the local identifiers of the author
      {
        SELECT DISTINCT ?manifestation ?illustrator (group_concat(distinct ?illustratorIdentifier;SEPARATOR=',') as ?illustratorIdentifiers)
        WHERE { 
          graph <http://beltrans-manifestations> {
            ?manifestation schema:name ?title ;
                           marcrel:ill ?illustrator .
          }    
          ?illustrator schema:sameAs/dcterms:identifier ?illustratorIdentifier . 
        }
        group by ?manifestation ?illustrator
      }
    }

    # #########################################################################
    #
    # SCENARIST
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation marcrel:sce ?scenarist . }
      OPTIONAL {
        graph <http://beltrans-contributors> { ?scenarist schema:nationality ?scenaristNationality . } 
        graph <http://master-data> { ?scenaristNationality mads:authoritativeLabel ?scenaristNationalityLabel . }
        FILTER (lang(?scenaristNationalityLabel) = 'en')
      }
      OPTIONAL { graph <http://beltrans-contributors> { ?scenarist rdfs:label ?scenaristLabel . } }

      BIND(CONCAT( COALESCE(?scenaristLabel, "missing name"), " (", ?scenaristIdentifiers, ")") as ?scenaristNameID)
      # This subquery retrieves the local identifiers of the author
      {
        SELECT DISTINCT ?manifestation ?scenarist (group_concat(distinct ?scenaristIdentifier;SEPARATOR=',') as ?scenaristIdentifiers)
        WHERE { 
          graph <http://beltrans-manifestations> {
            ?manifestation schema:name ?title ;
                           marcrel:sce ?scenarist .
          }    
          ?scenarist schema:sameAs/dcterms:identifier ?scenaristIdentifier . 
        }
        group by ?manifestation ?scenarist
      }
    }

    # #########################################################################
    #
    # PUBLISHING DIRECTOR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation marcrel:pbd ?publishingDirector . }
      OPTIONAL {
        graph <http://beltrans-contributors> { ?publishingDirector schema:nationality ?publishingDirectorNationality . } 
        graph <http://master-data> { ?publishingDirectorNationality mads:authoritativeLabel ?publishingDirectorNationalityLabel . }
        FILTER (lang(?publishingDirectorNationalityLabel) = 'en')
      }
      OPTIONAL { graph <http://beltrans-contributors> { ?publishingDirector rdfs:label ?publishingDirectorLabel . } }

      BIND(CONCAT( COALESCE(?publishingDirectorLabel, "missing name"), " (", ?publishingDirectorIdentifiers, ")") as ?publishingDirectorNameID)
      # This subquery retrieves the local identifiers of the author
      {
        SELECT DISTINCT ?manifestation ?publishingDirector (group_concat(distinct ?publishingDirectorIdentifier;SEPARATOR=',') as ?publishingDirectorIdentifiers)
        WHERE { 
          graph <http://beltrans-manifestations> {
            ?manifestation schema:name ?title ;
                           marcrel:pbd ?publishingDirector .
          }    
          ?publishingDirector schema:sameAs/dcterms:identifier ?publishingDirectorIdentifier . 
        }
        group by ?manifestation ?publishingDirector
      }
    }



}
GROUP BY ?manifestationID
HAVING(CONTAINS(str(?authorNationalities), "Belgium") || CONTAINS(str(?illustratorNationalities), "Belgium") || CONTAINS(str(?scenaristNationalities), "Belgium") || CONTAINS(str(?publishingDirectorNationalities), "Belgium")) 
