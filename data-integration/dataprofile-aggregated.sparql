prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix prov: <http://www.w3.org/ns/prov#>
prefix dc: <http://purl.org/dc/elements/1.1/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix schema: <http://schema.org/>
prefix bibo: <http://purl.org/ontology/bibo/>
prefix fabio: <http://purl.org/spar/fabio/> 
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX btm: <http://kbr.be/ns/beltrans/model#>
PREFIX btid: <http://kbr.be/id/data/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX btisni: <http://kbr.be/isni/>
PREFIX mads: <http://www.loc.gov/mads/rdf/v1#>
PREFIX up: <http://users.ugent.be/~tdenies/up/>
PREFIX marcrel: <http://id.loc.gov/vocabulary/relators/> 
PREFIX rdagroup1elements: <http://rdvocab.info/Elements/>
PREFIX rdagroup2elements: <http://rdvocab.info/ElementsGr2/>


  SELECT DISTINCT 
    (?manifestationID AS ?targetIdentifier)
    (group_concat(distinct ?clusterID;SEPARATOR=';') AS ?workClusterIdentifier)
    (group_concat(distinct ?sourceLangLabel;SEPARATOR=';') AS ?sourceLanguage)
    (group_concat(distinct ?targetLangLabel;SEPARATOR=';') AS ?targetLanguage)
    (group_concat(distinct ?isbn10;SEPARATOR=';') AS ?targetISBN10) 
    (group_concat(distinct ?isbn13;SEPARATOR=';') AS ?targetISBN13) 

    (group_concat(distinct ?kbrDatePublishedInclCurated;SEPARATOR=';') AS ?targetYearOfPublicationKBR)
    (group_concat(distinct ?bnfDatePublishedInclCurated;SEPARATOR=';') AS ?targetYearOfPublicationBnF)
    (group_concat(distinct ?kbDatePublishedInclCurated;SEPARATOR=';') AS ?targetYearOfPublicationKB)
    (group_concat(distinct ?unescoDatePublishedInclCurated;SEPARATOR=';') AS ?targetYearOfPublicationUnesco)

    (group_concat(distinct ?manifestationTitle;SEPARATOR=';') AS ?targetTitle)
    (group_concat(distinct ?manifestationSubtitle;SEPARATOR=';') AS ?targetSubtitle)

    (group_concat(distinct ?originalTitle;SEPARATOR=';') AS ?sourceTitle)
    (group_concat(distinct ?originalYearOfPublicationKBR;SEPARATOR=';') AS ?sourceYearOfPublication)
    (group_concat(distinct ?originalKBRID;SEPARATOR=';') AS ?sourceKBRIdentifier)
    (group_concat(distinct ?originalISBN10;SEPARATOR=';') AS ?sourceISBN10)
    (group_concat(distinct ?originalISBN13;SEPARATOR=';') AS ?sourceISBN13)


    (group_concat(distinct ?targetBBLabel;SEPARATOR=';') AS ?targetThesaurusBB)
    (group_concat(distinct ?kbrOriginalBBLabel;SEPARATOR=';') AS ?sourceThesaurusBB)
    (group_concat(distinct ?kbTargetManifestationKBCodeLabel;SEPARATOR=';') AS ?targetThesaurusKBCode)
    (group_concat(distinct ?bnfTargetManifestationRameauLabel;SEPARATOR=';') AS ?targetThesaurusRameau)
    (group_concat(distinct ?kbrTargetManifestationCollectionNameID;SEPARATOR=';') AS ?targetCollectionIdentifier)
    #(group_concat(distinct ?translationType;SEPARATOR=';') AS ?translationType)

    (group_concat(distinct ?kbrManifestationID;SEPARATOR=';') AS ?targetKBRIdentifier)
    (group_concat(distinct ?bnfManifestationID;SEPARATOR=';') AS ?targetBnFIdentifier)
    (group_concat(distinct ?kbManifestationID;SEPARATOR=';') AS ?targetKBIdentifier)
    (group_concat(distinct ?unescoManifestationID;SEPARATOR=';') AS ?targetUnescoIdentifier)

    (group_concat(distinct ?originalPublisherNameID;SEPARATOR=';') AS ?sourcePublisherIdentifiers)

    (group_concat(distinct ?kbrTargetManifestationEdition;SEPARATOR=';') AS ?targetKBREdition)
    (group_concat(distinct ?bnfTargetManifestationEdition;SEPARATOR=';') AS ?targetBnFEdition)
    (group_concat(distinct ?kbTargetManifestationEdition;SEPARATOR=';') AS ?targetKBEdition)

    (group_concat(distinct ?kbrTargetManifestationBindingTypeLabel;SEPARATOR=';') AS ?targetBindingType)


    (group_concat(distinct ?manifestationPlaceOfPublication;SEPARATOR=';') AS ?targetPlaceOfPublication)
    (group_concat(distinct ?manifestationCountryOfPublication;SEPARATOR=';') AS ?targetCountryOfPublication)
    (group_concat(distinct ?originalPlaceOfPublication;SEPARATOR=';') AS ?sourcePlaceOfPublication)
    (group_concat(distinct ?originalCountryOfPublication;SEPARATOR=';') AS ?sourceCountryOfPublication)

    (group_concat(distinct ?kbrResponsibilityStatement;SEPARATOR=';') AS ?targetKBRResponsibilityStatement)
    (group_concat(distinct ?bnfResponsibilityStatement;SEPARATOR=';') AS ?targetBnFResponsibilityStatement)
    (group_concat(distinct ?kbResponsibilityStatement;SEPARATOR=';') AS ?targetKBResponsibilityStatement)
  WHERE {

    graph <http://beltrans-manifestations> { 
      ?manifestation a schema:CreativeWork ;
                     schema:isPartOf btid:beltransCorpus ;
                     dcterms:identifier ?manifestationID .
    }

    # ORIGINAL INFORMATION
    #
    graph <http://beltrans-manifestations> { ?manifestation schema:translationOfWork ?original . }
    graph <http://beltrans-originals> { ?original a schema:CreativeWork . }  
    OPTIONAL { graph <http://beltrans-originals> { ?original bibo:isbn10 ?originalISBN10 . } }
    OPTIONAL { graph <http://beltrans-originals> { ?original bibo:isbn13 ?originalISBN13 . } }
    OPTIONAL {
      graph <http://beltrans-originals> { 
        ?original bf:identifiedBy ?originalKBREntity . 
        ?originalKBREntity a bf:Identifier ;
                           rdfs:label "KBR" ;
                           rdf:value ?originalKBRID .
      } 
      graph <http://beltrans-originals> { ?original schema:sameAs ?kbrOriginal . }
      graph <http://kbr-originals> { 
        ?kbrOriginal a schema:CreativeWork ;
                     schema:datePublished ?originalYearOfPublicationKBR .
      }
      OPTIONAL { 
        graph <http://kbr-originals> { ?kbrOriginal schema:about ?kbrOriginalBB . }
        graph <http://master-data> { ?kbrOriginalBB skos:prefLabel ?kbrOriginalBBLabel . }
        FILTER(lang(?kbrOriginalBBLabel) = 'en')
      }
    }
    OPTIONAL { graph <http://beltrans-originals> { ?original schema:name ?originalTitle . } }
    OPTIONAL {
      graph <http://beltrans-originals> { ?original schema:publisher ?originalPublisher . } 
      graph <http://beltrans-contributors> { ?originalPublisher rdfs:label ?originalPublisherName . } 
      graph <http://beltrans-contributors> { ?originalPublisher dcterms:identifier ?originalPublisherID . } 
    }
    BIND(CONCAT(?originalPublisherName, ' (', ?originalPublisherID, ')') AS ?originalPublisherNameID)


    # CLUSTER INFORMATION
    #
    
    graph <http://beltrans-works> { 
      ?cluster fabio:hasManifestation ?manifestation ;
               dcterms:identifier ?clusterID .
    }
    

    OPTIONAL { graph <http://beltrans-manifestations> { ?manifestation schema:datePublished ?manifestationYearOfPublication . } }

    OPTIONAL { 
      graph <http://beltrans-geo> { ?manifestation schema:locationCreated ?manifestationLocation . }

      OPTIONAL { graph <http://beltrans-geo> { ?manifestationLocation rdfs:label ?manifestationPlaceOfPublication . } }
      OPTIONAL { graph <http://beltrans-geo> { ?manifestationLocation rdfs:comment ?manifestationCountryOfPublication . } }
    }

    OPTIONAL { 
      graph <http://beltrans-geo> { ?original schema:locationCreated ?originalLocation . }

      OPTIONAL { graph <http://beltrans-geo> { ?originalLocation rdfs:label ?originalPlaceOfPublication . } }
      OPTIONAL { graph <http://beltrans-geo> { ?originalLocation rdfs:comment ?originalCountryOfPublication . } }
    }



    graph <http://beltrans-manifestations> {
      ?manifestation bf:title ?titleEntity .

      ?titleEntity a bf:Title ;
                   bf:mainTitle ?manifestationTitle .
    }
    OPTIONAL {

      ?titleEntity a bf:Title ;
                   bf:subtitle ?manifestationSubtitle .
    }

    OPTIONAL { graph <http://beltrans-manifestations> { ?manifestation bibo:isbn10 ?isbn10 . } }
    OPTIONAL { graph <http://beltrans-manifestations> { ?manifestation bibo:isbn13 ?isbn13 . } }

    # BELGIAN BIBLIOGRAPHY
    #
    OPTIONAL { 
      graph <http://beltrans-manifestations> { ?manifestation schema:about ?targetBB . }
      OPTIONAL {
        graph <http://master-data> { ?targetBB skos:prefLabel ?targetBBLabel . }
        FILTER(lang(?targetBBLabel) = 'en')
      }
    }

    # TARGET LANGUAGE
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:inLanguage ?targetLang . } 
      OPTIONAL {
        graph <http://master-data> { ?targetLang mads:authoritativeLabel ?targetLangLabel . }
        FILTER (lang(?targetLangLabel) = 'en')
      }
    }

    # SOURCE LANGUAGE
    #
    OPTIONAL {
      graph <http://beltrans-originals> { ?original schema:inLanguage ?sourceLang . }  
      OPTIONAL {
        graph <http://master-data> { ?sourceLang mads:authoritativeLabel ?sourceLangLabel . }
        FILTER (lang(?sourceLangLabel) = 'en')
      }
    }

    

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM KBR
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?kbrManifestation . }
      graph <http://kbr-syracuse> { ?kbrManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation dcterms:identifier ?kbrManifestationID . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:name ?kbrTitle . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:datePublished ?kbrDatePublished . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation schema:bookEdition ?kbrTargetManifestationEdition . }}
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrManifestation rdfs:comment ?kbrResponsibilityStatement . }}
   

      # COLLECTION INFORMATION
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:isPartOf ?kbrTargetManifestationCollectionURI . }
        OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI dcterms:identifier ?kbrTargetManifestationCollectionID . } }
        OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI schema:name ?kbrTargetManifestationCollectionName . } }
        BIND(CONCAT(?kbrTargetManifestationCollectionName, ' (', ?kbrTargetManifestationCollectionID, ')') AS ?kbrTargetManifestationCollectionNameID)
      }


      # BINDING TYPE
      #
      OPTIONAL {
        graph <http://kbr-syracuse> { ?kbrManifestation schema:bookFormat ?kbrTargetManifestationBindingType . }
        OPTIONAL {
          graph <http://master-data> { ?kbrTargetManifestationBindingType rdfs:label ?kbrTargetManifestationBindingTypeLabel .}
          FILTER(lang(?kbrTargetManifestationBindingTypeLabel) = 'en')
        }
      }

    } # end optional KBR

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM BnF
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?bnfManifestation . }
      graph <http://bnf-publications> { ?bnfManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation dcterms:identifier ?bnfManifestationID . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:name ?bnfTitle . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:datePublished ?bnfDatePublished . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation schema:bookEdition ?bnfTargetManifestationEdition . }}
      OPTIONAL { graph <http://bnf-publications> { ?bnfManifestation rdfs:comment ?bnfResponsibilityStatement . }}

    }

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM KB
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?kbManifestation . }
      graph <http://kb-publications> { ?kbManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation dcterms:identifier ?kbManifestationID . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:name ?kbTitle . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:datePublished ?kbDatePublished . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation schema:bookEdition ?kbTargetManifestationEdition . }}
      OPTIONAL { graph <http://kb-publications> { ?kbManifestation rdfs:comment ?kbResponsibilityStatement . }}


      OPTIONAL {
        graph <http://kb-publications> { ?kbManifestation schema:about ?genre . }
        graph <http://kbcode> { ?genre rdfs:label ?kbTargetManifestationKBCodeLabel. }
      }

    } # end optional KB

    # #########################################################################
    #
    # DATA OF THIS MANIFESTATION WE HAVE FROM UNESCO
    #
    OPTIONAL {
      graph <http://beltrans-manifestations> { ?manifestation schema:sameAs ?unescoManifestation . }
      graph <http://unesco> { ?unescoManifestation a schema:CreativeWork . }

      # optional attributes of the translation itself
      OPTIONAL { graph <http://unesco> { ?unescoManifestation dcterms:identifier ?unescoManifestationID . }}
      OPTIONAL { graph <http://unesco> { ?unescoManifestation schema:name ?unescoTitle . }}
      OPTIONAL { graph <http://unesco> { ?unescoManifestation schema:datePublished ?unescoDatePublished . }}

    } # end optional UNESCO


        

    # If there is a manually curated date of publication (schema:datePublished on the integrated record)
    # then use that date for all the local dates. Like this, the postprocessing script will not find contradicting dates
    BIND( COALESCE(?manifestationYearOfPublication, ?kbrDatePublished, "") AS ?kbrDatePublishedInclCurated)
    BIND( COALESCE(?manifestationYearOfPublication, ?bnfDatePublished, "") AS ?bnfDatePublishedInclCurated)
    BIND( COALESCE(?manifestationYearOfPublication, ?kbDatePublished, "") AS ?kbDatePublishedInclCurated)
    BIND( COALESCE(?manifestationYearOfPublication, ?unescoDatePublished, "") AS ?unescoDatePublishedInclCurated)

}
GROUP BY ?manifestationID
