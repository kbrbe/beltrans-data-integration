prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix prov: <http://www.w3.org/ns/prov#>
prefix dc: <http://purl.org/dc/elements/1.1/>
prefix dcterms: <http://purl.org/dc/terms/>
prefix schema: <http://schema.org/>
prefix bibo: <http://purl.org/ontology/bibo/>
PREFIX skos: <http://www.w3.org/2004/02/skos/core#>
PREFIX btm: <http://kbr.be/ns/beltrans/model#>
PREFIX btid: <http://kbr.be/id/data/> 
PREFIX bf: <http://id.loc.gov/ontologies/bibframe/>
PREFIX btisni: <http://kbr.be/isni/>
PREFIX mads: <http://www.loc.gov/mads/rdf/v1#>
PREFIX up: <http://users.ugent.be/~tdenies/up/>

  SELECT DISTINCT
    (?manifestationID AS ?targetTextKBRIdentifier)
    (group_concat(distinct ?kbrSourceManifestationID;SEPARATOR=';') AS ?sourceTextKBRIdentifier)
    (group_concat(distinct ?bnfManifestation;SEPARATOR=';') AS ?targetTextBnFIdentifier)
    (group_concat(distinct ?kbrTargetManifestationBBLabel;SEPARATOR=';') AS ?targetTextThesaurusBB)
    (group_concat(distinct ?translationType;SEPARATOR=';') AS ?translationType)
    (group_concat(distinct ?manifestationTitle;SEPARATOR=';') AS ?targetTextTitle)
    (group_concat(distinct ?kbrSourceManifestationTtitle;SEPARATOR=';') AS ?sourceTextTitle)
    (group_concat(distinct ?kbrTargetManifestationEdition;SEPARATOR=';') AS ?targetTextEdition)
    (group_concat(distinct ?kbrTargetManifestationBindingTypeLabel;SEPARATOR=';') AS ?targetTextBindingType)
    (group_concat(distinct ?kbrTargetManifestationCollectionNameID;SEPARATOR=';') AS ?targetTextCollectionIdentifier)
    (group_concat(distinct ?kbrCountryOfOriginLabel;SEPARATOR=';') AS ?targetTextCountryOfPublication)
    (group_concat(distinct ?kbrDatePublished;SEPARATOR=';') AS ?targetTextYearOfPublication)
    (group_concat(distinct ?kbrLocationCreated;SEPARATOR=';') AS ?targetTextPlaceOfPublication)
    (group_concat(distinct ?kbrResponsibilityStatement;SEPARATOR=';') AS ?targetTextResponsibilityStatement)
    (group_concat(distinct ?kbrSourceLangLabel;SEPARATOR=';') AS ?sourceTextLanguage)
    (group_concat(distinct ?kbrTargetLangLabel;SEPARATOR=';') AS ?targetTextLanguage)
    (group_concat(distinct ?kbrSourceManifestationISBN13;SEPARATOR=';') AS ?sourceTextISBN)
    (group_concat(distinct ?isbn13;SEPARATOR=';') AS ?targetTextISBN) 
    (group_concat(distinct ?kbrAuthorNameID;SEPARATOR=';') AS ?authorIdentifier)
    (group_concat(distinct ?kbrTranslatorNameID;SEPARATOR=';') AS ?translatorIdentifier)
    (group_concat(distinct ?kbrPublisherNameID;SEPARATOR=';') AS ?targetPublisherIdentifier)
    (group_concat(distinct ?kbrIllustratorNameID;SEPARATOR=';') AS ?illustratorIdentifier)
    (group_concat(distinct ?kbrScenaristNameID;SEPARATOR=';') AS ?scenaristIdentifier)
  FROM <http://kbr-syracuse>
  FROM <http://isni-sru>
  FROM <http://isni-rdf>
  FROM <http://master-data>
  FROM <http://kbr-linked-authorities>
  WHERE {

    graph <http://kbr-syracuse> { 
      ?manifestation a schema:CreativeWork ;
                     dcterms:identifier ?manifestationID ;
                     schema:name ?manifestationTitle .
    }
        
    # determine if this manifestation is a multilingual work
    BIND(exists{ graph <http://kbr-syracuse> { ?manifestation a btm:MultiLingualManifestation . } } AS ?classExists)
    BIND(IF(?classExists, "multilingual", "translation") AS ?translationType)

    # optional attributes of the translation itself
    OPTIONAL { graph <http://kbr-syracuse> { ?manifestation schema:datePublished ?kbrDatePublished . }}
    OPTIONAL { graph <http://kbr-syracuse> { ?manifestation schema:bookEdition ?kbrTargetManifestationEdition . }}
    OPTIONAL { graph <http://kbr-syracuse> { ?manifestation schema:locationCreated ?kbrLocationCreated . }}
    OPTIONAL { graph <http://kbr-syracuse> { ?manifestation rdfs:comment ?kbrResponsibilityStatement . }}

    OPTIONAL {
      graph <http://kbr-syracuse> { ?manifestation schema:isPartOf ?kbrTargetManifestationCollectionURI . }

      OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI dcterms:identifier ?kbrTargetManifestationCollectionID . } }
      OPTIONAL { graph <http://kbr-syracuse> { ?kbrTargetManifestationCollectionURI schema:name ?kbrTargetManifestationCollectionName . } }

      BIND(CONCAT(?kbrTargetManifestationCollectionName, ' (', ?kbrTargetManifestationCollectionID, ')') AS ?kbrTargetManifestationCollectionNameID)
    }



    OPTIONAL { 
      graph <http://kbr-syracuse> { ?manifestation schema:about ?kbrTargetManifestationBB . }

      OPTIONAL {
        graph <http://master-data> { ?kbrTargetManifestationBB skos:prefLabel ?kbrTargetManifestationBBLabel . }
        FILTER(lang(?kbrTargetManifestationBBLabel) = 'en')
      }
    }

    OPTIONAL {
      graph <http://kbr-syracuse> { ?manifestation schema:bookFormat ?kbrTargetManifestationBindingType . }

      OPTIONAL {
        graph <http://master-data> { ?kbrTargetManifestationBindingType rdfs:label ?kbrTargetManifestationBindingTypeLabel .}
        FILTER(lang(?kbrTargetManifestationBindingTypeLabel) = 'en')
      }
    }

    OPTIONAL { 
      graph <http://kbr-syracuse> { ?manifestation schema:countryOfOrigin ?kbrCountryOfOrigin . }

      OPTIONAL {
        graph <http://master-data> { ?kbrCountryOfOrigin mads:authoritativeLabel ?kbrCountryOfOriginLabel . } 
        FILTER (lang(?kbrCountryOfOriginLabel) = 'en')
      }
    }

    #
    # TARGET LANGUAGE
    #
    OPTIONAL { 
      graph <http://kbr-syracuse> { ?manifestation schema:inLanguage ?kbrTargetLang . } 

      # within the optional language check optionally for an English label of it (it should exist though)
      OPTIONAL {
        graph <http://master-data> { ?kbrTargetLang mads:authoritativeLabel ?kbrTargetLangLabel . }
        FILTER (lang(?kbrTargetLangLabel) = 'en')
      }
    } 

    #
    # SOURCE LANGUAGE
    #
    OPTIONAL {
      graph <http://kbr-syracuse> {
        ?manifestation schema:translationOfWork ?manifestationSource .
        ?manifestationSource schema:inLanguage ?kbrSourceLang .
      }

      OPTIONAL {
        graph <http://master-data> { ?kbrSourceLang mads:authoritativeLabel ?kbrSourceLangLabel . }
        FILTER (lang(?kbrSourceLangLabel) = 'en')
      }

      #
      # In case it is not a dummy source entry just with the language, there is an identifier and a title
      #
      OPTIONAL {
        graph <http://kbr-syracuse> {
          ?manifestationSource dcterms:identifier ?kbrSourceManifestationID ;
                               schema:name ?kbrSourceManifestationTitle .
        }

       # Optionally there is also an ISBN for the source
       OPTIONAL { graph <http://kbr-syracuse> { ?manifestationSource bibo:isbn13 ?kbrSourceManifestationISBN13 . } }
      }


    }

    #
    # find the manifestation in other data sources based on ISBN
    #
    OPTIONAL {
      graph <http://kbr-syracuse> { ?manifestation bibo:isbn13 ?isbn13 . }  

      OPTIONAL {
        graph <http://bnf-publications> { ?bnfManifestation bibo:isbn13 ?isbn13 . }
      }
      
    }



    # ---------------------------------------------------------------------------
    #
    # (1) AUTHOR
    #
    # if there is an author we optionally check this data source and other data sources for other optional attributes of the author
    #
    OPTIONAL { 
      graph <http://kbr-syracuse> { ?manifestation schema:author ?kbrAuthor . } 

      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrAuthor dcterms:identifier ?kbrAuthorID . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrAuthor schema:familyName ?kbrAuthorFamilyName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrAuthor schema:givenName ?kbrAuthorGivenName . }}

      OPTIONAL {
        graph <http://kbr-linked-authorities> { ?kbrAuthor schema:nationality ?kbrAuthorNationality . } 

        # within this optional nationality check optionally for an English label in the master data
        OPTIONAL {
          graph <http://master-data> { ?kbrAuthorNationality mads:authoritativeLabel ?kbrAuthorNationalityLabel . }
          FILTER (lang(?kbrAuthorNationalityLabel) = 'en')
        }
      }
        BIND(CONCAT(?kbrAuthorFamilyName, ', ', ?kbrAuthorGivenName, ' (', ?kbrAuthorID, ')') AS ?kbrAuthorNameID)
    }

    # ---------------------------------------------------------------------------
    #
    # (2) TRANSLATOR
    #
    # if there is a translator we optionally check this data source and other data sources for other optional attributes of the translator
    #
    OPTIONAL { 

      graph <http://kbr-syracuse> { ?manifestation schema:translator ?kbrTranslator . } 

      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrTranslator dcterms:identifier ?kbrTranslatorID . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrTranslator schema:familyName ?kbrTranslatorFamilyName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrTranslator schema:givenName ?kbrTranslatorGivenName . } }

      OPTIONAL {
        graph <http://kbr-linked-authorities> { ?kbrTranslator schema:nationality ?kbrTranslatorNationality . } 

 

        # within this optional nationality check optionally for an English label in the master data
        OPTIONAL {
          graph <http://master-data> { ?kbrTranslatorNationality mads:authoritativeLabel ?kbrTranslatorNationalityLabel . }
          FILTER (lang(?kbrTranslatorNationalityLabel) = 'en')
        }
      }
      BIND(CONCAT(?kbrTranslatorFamilyName, ', ', ?kbrTranslatorGivenName, ' (', ?kbrTranslatorID, ')') AS ?kbrTranslatorNameID)
    }


    # ---------------------------------------------------------------------------
    #
    # (3) PUBLISHER
    #
    # if there is a publisher we optionally check this data source and other data sources for other optional attributes of the publisher
    #
    OPTIONAL { 

      graph <http://kbr-syracuse> { ?manifestation schema:publisher ?kbrPublisher . } 

      OPTIONAL {
        graph <http://kbr-syracuse> { 

        ?publisherAssociation a prov:Association ;
                                prov:agent ?kbrPublisher ;
                                prov:hadRole btid:role_pbl .

        ?publisherTranslationActivity a prov:Activity ;
                  prov:qualifiedAssociation ?publisherAssociation ;
                  prov:generated ?manifestation .
        }

        OPTIONAL {
          graph <http://kbr-linked-authorities> { 
            ?kbrPublisher rdfs:label ?kbrPublisherName ;
                          dcterms:identifier ?kbrPublisherID . }
        }

        OPTIONAL {
          graph <http://kbr-syracuse> { ?publisherAssociation up:assertionType ?publisherUncertainty . }
        }

        BIND(CONCAT(?kbrPublisherName, ' (', ?kbrPublisherID, ')') AS ?kbrPublisherNameID)
 
      }
    }

    # ---------------------------------------------------------------------------
    #
    # (4) ILLUSTRATOR
    #
    # if there is a illustrator we optionally check this data source and other data sources for other optional attributes of the illustrator
    #
    OPTIONAL { 

      graph <http://kbr-syracuse> { 
        ?illustratorAssociation a prov:Association ;
                                prov:agent ?kbrIllustrator ;
                                prov:hadRole btid:role_ill .

        ?activity a prov:Activity ;
                  prov:qualifiedAssociation ?illustratorAssociation ;
                  prov:generated ?manifestation .
      } 

      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrIllustrator schema:familyName ?kbrIllustratorFamilyName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrIllustrator schema:givenName ?kbrIllustratorGivenName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrIllustrator dcterms:identifier ?kbrIllustratorID . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrIllustrator schema:nationality ?kbrIllustratorNationality . } 
        OPTIONAL {
          graph <http://master-data> { ?kbrIllustratorNationality mads:authoritativeLabel ?kbrIllustratorNationalityLabel . }
          FILTER (lang(?kbrIllustratorNationalityLabel) = 'en')
        }
      }

      BIND(CONCAT(?kbrIllustratorFamilyName, ', ', ?kbrIllustratorGivenName, ' (', ?kbrIllustratorID, ')') AS ?kbrIllustratorNameID)

    }

    # ---------------------------------------------------------------------------
    #
    # (5) SCENARIST
    #
    # if there is a scenarist we optionally check this data source and other data sources for other optional attributes of the scenarist
    #
    OPTIONAL { 

      graph <http://kbr-syracuse> { 
        ?scenaristAssociation a prov:Association ;
                                prov:agent ?kbrScenarist ;
                                prov:hadRole btid:role_sce .

        ?activity a prov:Activity ;
                  prov:qualifiedAssociation ?scenaristAssociation ;
                  prov:generated ?manifestation .
      } 

      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrScenarist schema:familyName ?kbrScenaristFamilyName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrScenarist schema:givenName ?kbrScenaristGivenName . } }
      OPTIONAL { graph <http://kbr-linked-authorities> { ?kbrScenarist dcterms:identifier ?kbrScenaristID . } }

      OPTIONAL {
        graph <http://kbr-linked-authorities> { ?kbrScenarist schema:nationality ?kbrScenaristNationality . } 

        # within this optional nationality check optionally for an English label in the master data
        OPTIONAL {
          graph <http://master-data> { ?kbrScenaristNationality mads:authoritativeLabel ?kbrScenaristNationalityLabel . }
          FILTER (lang(?kbrScenaristNationalityLabel) = 'en')
        }
      }

      BIND(CONCAT(?kbrScenaristFamilyName, ', ', ?kbrScenaristGivenName, ' (', ?kbrScenaristID, ')') AS ?kbrScenaristNameID)
 
   }

   FILTER( str(?kbrAuthorNationalityLabel) = 'Belgium' || str(?kbrIllustratorNationalityLabel) = 'Belgium' || str(?kbrScenaristNationalityLabel) = 'Belgium' )

}
GROUP BY ?manifestationID
